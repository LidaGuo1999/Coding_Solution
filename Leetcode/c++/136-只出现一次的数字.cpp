/*
给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。

说明：
你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？

思路梳理：
1、这是一道利用计算机运算巧解的问题，因为相同的值异或会得到0，所以只需要将所有数字全部异或在一起，最终的值就是只出现一次的值。

评测结果：
16ms, 80.22%; 11.5MB, 9,80%;
 */

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int ans = 0;
        for (int i = 0; i < nums.size(); i++) {
            ans ^= nums[i];
        }

        return ans;
    }
};